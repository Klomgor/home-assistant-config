- id: '1611982176739'
  alias: 'System: SSL Certificate Renewal'
  description: renew ssl certificate from letsencrypt.
  trigger:
  - at: 00:02
    platform: time
  condition: []
  action:
  - data:
      addon: core_letsencrypt
    service: hassio.addon_restart
  mode: single
- id: '1612291452533'
  alias: 'Shed: Plant Light On at Sunrise'
  description: used when Rosemary plant is brought indoors during the winter.
  trigger:
  - platform: sun
    event: sunrise
  condition:
  - condition: state
    entity_id: input_boolean.shed_plant_lighting
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plg_utility
  mode: single
- id: '1612291484467'
  alias: 'Shed: Plant Light Off after 8 hours'
  description: used when Rosemary plant is brought indoors during the winter.
  trigger:
  - platform: sun
    event: sunrise
    offset: 08:00:00
  condition:
  - condition: state
    entity_id: input_boolean.shed_plant_lighting
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plg_utility
  mode: single
- id: '1612292614712'
  alias: 'Kitchen Speakers: ON when music starts playing'
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.kitchen_speaker
    to: playing
    for: 00:00:01
  condition:
  - condition: state
    state: 'off'
    entity_id: switch.plg_kitchen_speaker
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plg_kitchen_speaker
  mode: single
- id: '1612292752882'
  alias: 'Kitchen Speakers: Off when music no longer playing'
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.kitchen_speaker
    from: playing
    to: idle
    for: 00:00:30
  - platform: state
    entity_id: media_player.kitchen_speaker
    to: 'off'
  condition:
  - condition: state
    state: 'on'
    entity_id: switch.plg_kitchen_speaker
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plg_kitchen_speaker
  mode: single
- id: '1612292819059'
  alias: 'House: Indoor Lights on at sunset'
  description: ''
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.indoor_evening_lights_on
  mode: single
- id: '1612292887886'
  alias: 'House: Indoor Lights off for the night check'
  description: turn off any lights that might have been left on over night.
  trigger:
  - platform: time
    at: 01:01:00
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.indoor_evening_lights_off
  mode: single
- id: '1612295061627'
  alias: 'Driveway: Lights off at sunrise'
  description: turn off driveway lights shortly before sunrise.
  trigger:
  - platform: sun
    event: sunrise
    offset: -00:15:00
  condition:
  - condition: state
    entity_id: light.group_driveway_lights
    state: 'on'
  action:
  - service: light.turn_off
    target:
      entity_id: light.group_driveway_lights
    data:
      transition: 2
  mode: single
- id: '1612298561421'
  alias: 'Main Bedroom: Climate controls'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: state
    entity_id: input_boolean.main_bedroom_heater
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: numeric_state
          below: '21.1'
          entity_id: sensor.main_bedroom_mean_temperature_calculation
        - condition: time
          after: '21:00:00'
          before: 05:29:00
        - condition: state
          state: 'off'
          entity_id: switch.plg_mainbedroom_heater
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.plg_mainbedroom_heater
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: 05:30:00
          before: '20:59:00'
        - condition: state
          entity_id: switch.plg_mainbedroom_heater
          state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.plg_mainbedroom_heater
    default: []
  mode: single
- id: '1612306243899'
  alias: 'Garage Inside: Lights on when person doors opened'
  description: turn on garage lights when house or side door is opened after sunset.
  trigger:
  - platform: state
    to: 'on'
    entity_id: binary_sensor.snr_garage_housedoorcontact_contact
  - platform: state
    entity_id: binary_sensor.snr_garage_sidedoorcontact_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - condition: state
      entity_id: switch.sw_garage_ceilingmainlights
      state: 'off'
      for: 00:00:10
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.sw_garage_ceilingmainlights
  mode: single
- id: '1612309818757'
  alias: 'Garage Outside: Side light On at night with motion'
  description: turn light at garage side door on when motion is detected at side of
    house.
  trigger:
  - platform: state
    entity_id: binary_sensor.snr_outside_garagesidemotion_occupancy
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.sw_outside_garagesidedoorlight
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.snr_outside_garagesidemotion_occupancy
      from: 'on'
      to: 'off'
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.sw_outside_garagesidedoorlight
  mode: restart
- id: '1612462343806'
  alias: 'Garage Inside: Dehumidifier off when vehicle door opened'
  description: turn off dehumidifier when garage vehicle door is opened.
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    from: 'off'
    to: 'on'
    for: 00:00:20
  condition:
  - condition: state
    entity_id: switch.plg_garage_dehumidifier
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plg_garage_dehumidifier
  mode: single
- id: '1612462859674'
  alias: 'Garage Inside: Dehumidifier check when vehicle door closes'
  description: ''
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    from: 'on'
    to: 'off'
    for: 00:00:20
  condition:
  - condition: and
    conditions:
    - condition: numeric_state
      above: '65.0'
      entity_id: sensor.garage_mean_humidity_calculation
    - condition: state
      entity_id: switch.plg_garage_dehumidifier
      state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plg_garage_dehumidifier
  mode: single
- id: '1612463000537'
  alias: 'Garage Inside: Dehumidifier on with high humidity'
  description: check garage humidity every 10 minutes and turn on dehumidifier if
    humidity has risen above 65% RH
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: numeric_state
    above: '65.0'
    entity_id: sensor.garage_mean_humidity_calculation
  - condition: and
    conditions:
    - condition: state
      entity_id: switch.plg_garage_dehumidifier
      state: 'off'
    - condition: state
      entity_id: switch.sw_garage_vehicledoorcontact
      state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plg_garage_dehumidifier
  mode: single
- id: '1612463100433'
  alias: 'Garage Inside: Dehumidifier off with low humidity'
  description: check garage humidity every 15 minutes and turn off dehumidifier if
    humidity has dropped below 61% RH
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.garage_mean_humidity_calculation
      below: '61.0'
    - condition: state
      entity_id: switch.plg_garage_dehumidifier
      state: 'on'
      for:
        hours: 1
        minutes: 0
        seconds: 0
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plg_garage_dehumidifier
  mode: single
- id: '1613012241426'
  alias: 'Office: Air Purifier on with occupancy'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.snr_office_chairvibration_action
    to: tilt
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.snr_office_motion_occupancy
      state: 'on'
    - condition: state
      entity_id: switch.plg_office_airpurifier
      state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.plg_office_airpurifier
  mode: restart
- id: '1613012339822'
  alias: 'Office: Air Purifier off when room is empty'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.snr_office_motion_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: switch.plg_office_airpurifier
      state: 'on'
    - condition: numeric_state
      entity_id: sensor.snr_outside_airquality_aqi
      below: 100
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.plg_office_airpurifier
  mode: single
- id: '1613958937211'
  alias: 'House: Nofity if water leak detected'
  description: send notification to everyone, including the TV, if water leak is detected.
  trigger:
  - platform: state
    entity_id: binary_sensor.group_leak_sensors
    to: 'on'
  condition: []
  action:
  - service: notify.grp_anne_chris_phones
    data:
      title: "‚ùó\U0001F4A7 Water Detected"
      message: Water detected at {{ triggered_leak_sensor }} sensor.
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  - service: notify.grp_all_tvs
    data:
      message: ALERT! Water detected at {{ triggered_leak_sensor }} sensor.
  variables:
    triggered_leak_sensor: "{% for entity in trigger.to_state.attributes.entity_id
      %}\n  {% if is_state(entity, 'on') %}\n    {{ state_attr(entity, 'friendly_name')
      }}\n  {% endif %}\n{% endfor %}\n"
  mode: single
- id: '1616274628046'
  alias: 'Kitchen: Espresso Machine On in the morning'
  description: turn on the espresso machine in the morning (between 05:00 - 10:00)
    when chris' iphone is removed from the charger for 1 minute.
  trigger:
  - platform: state
    entity_id:
    - sensor.turraphone_battery_state
    to: Not Charging
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      state: home
      entity_id: device_tracker.turraphone
    - condition: time
      before: '10:00:00'
      after: 05:00:00
    - condition: state
      state: 'off'
      entity_id: switch.plg_kitchen_espressomachine
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.plg_kitchen_espressomachine
    data: {}
  mode: single
- id: '1616875296550'
  alias: 'Crawlspace: Notify when locker door opened'
  description: when locker door is opened notify chris' iphone.
  trigger:
  - platform: state
    to: 'on'
    for: 00:00:02
    entity_id: binary_sensor.snr_crawlspace_lockerdoorcontact_contact
  condition: []
  action:
  - service: notify.mobile_app_turraphone
    data:
      title: "‚ùó\U0001F6AA Locker Door Open"
      message: Locker Door has been opened
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  mode: single
- id: '1617333806988'
  alias: 'Shed: Flood Light on at night with motion'
  description: turn on shed flood light 15 minutes after sun is below the horizon
    and keep on for 5 minutes after motion is no longer detected.
  trigger:
  - platform: state
    to: 'on'
    entity_id: binary_sensor.snr_outside_shedmotion_occupancy
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
      for: 00:15:00
    - condition: state
      entity_id: switch.sw_shed_floodlight
      state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.sw_shed_floodlight
  - wait_for_trigger:
    - platform: state
      from: 'on'
      to: 'off'
      entity_id: binary_sensor.snr_outside_shedmotion_occupancy
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.sw_shed_floodlight
  mode: restart
- id: '1619640982634'
  alias: 'Shed: Notify when door left open at night'
  description: notify chris' phone if the shed door is left open for 5 minutes when
    the time is after 22:30.
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.snr_shed_doorcontact_contact
      state: 'on'
      for: 00:05:00
    - condition: time
      after: '22:30:00'
  action:
  - service: notify.mobile_app_turraphone
    data:
      message: Shed Door has been left open
      title: "‚ùó\U0001F6AA Shed Door Open"
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  mode: single
- id: '1619814582936'
  alias: 'Shed: Fan on when door is opened'
  description: turn on shed exhaust fan for 10 minutes when the door is opened.
  trigger:
  - platform: state
    entity_id: binary_sensor.snr_shed_doorcontact_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.sw_shed_fan
    state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.sw_shed_fan
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.sw_shed_fan
  mode: single
- id: '1623889405239'
  alias: 'Garage Inside: Offer to open vehicle door on return home'
  description: notify chris' phone when it returns home from away and offer to open
    the garage door.
  trigger:
  - platform: state
    entity_id: device_tracker.turraphone
    from: not_home
    to: home
  condition:
  - condition: state
    entity_id: switch.sw_garage_vehicledoorcontact
    state: 'off'
  action:
  - service: notify.mobile_app_turraphone
    data:
      title: Welcome Home!
      message: Would you like to open the Garage Door?
      data:
        actions:
        - action: OPEN_DOOR
          title: Yes Please
        - action: NO_ACTION
          title: No Thanks
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: OPEN_DOOR
    timeout: 00:02:00
    continue_on_timeout: false
  - service: cover.open_cover
    target:
      entity_id: cover.garage_vehicledoor
  mode: single
- id: '1624131994582'
  alias: 'Garage Indoor: notify Chris when vehicle door opened'
  description: send a notification to chris' phone, including a dynamic image, when
    the garage door has been opened.
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    from: 'off'
    to: 'on'
    for: 00:00:10
  condition: []
  action:
  - service: notify.mobile_app_turraphone
    data:
      title: "\U0001F6AA Garage Door"
      message: The Garage Door has been opened.
      data:
        entity_id: camera.nas01_garage
  mode: single
- id: '1625692425135'
  alias: 'HVAC: Notify Chris'' phone if window is open'
  description: notify chris' phone if hvac starts cooling the house and a window is
    left open.
  trigger:
  - platform: state
    entity_id: climate.amazon
    attribute: hvac_action
    to: cooling
  condition:
  - condition: state
    entity_id: binary_sensor.group_windows
    state: 'on'
  action:
  - service: notify.mobile_app_turraphone
    data:
      message: AC has started and an open window was detected.
      title: "‚ùó\U0001FA9F Window left open"
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  mode: single
- id: '1630907999593'
  alias: 'Garage Inside: HVAC update outside temperature'
  description: publish outdoor temperature and time to thermostat mqtt topic
  trigger:
  - platform: time_pattern
    minutes: /10
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt-pi/HVAC_Garage_Thermostat/set/thermostat_outdoor_temperature
      payload_template: '{{ states(''sensor.snr_outside_temperature'') }}'
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt-pi/HVAC_Garage_Thermostat/set/thermostat_time
      payload: ''
  mode: restart
- id: '1631040582872'
  alias: 'Garage Inside: HVAC off when vehicle door opened'
  description: turn heating mode off on thermostat every time door is opened if outside
    temp is lower than 11c to ensure heater doesn't turn on while vehicle door is
    open.
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition:
  - condition: numeric_state
    entity_id: sensor.snr_outside_temperature
    below: '11'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.sw_hvac_garage_thermostat
    data: {}
  mode: single
- id: '1631040781299'
  alias: 'Garage Inside: HVAC on when vehicle door closed'
  description: wait a couple mins after vehicle door closes to ensure temp normalizes,
    if current is below target temp, before returning the thermostat to heating mode.
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  condition:
  - condition: state
    entity_id: switch.sw_hvac_garage_thermostat
    state: 'off'
  action:
  - delay:
      hours: 0
      minutes: "{% set current_temp = state_attr('climate.hvac_garage_thermostat','current_temperature')
        %} {% set target_temp = state_attr('climate.hvac_garage_thermostat','temperature')
        %} {% if is_number(current_temp) and is_number(target_temp) %}\n  {% set temp_diff
        = current_temp | float - target_temp | float %}\n  {# delay if temp diff is
        lower to give room time for normalization #}\n  {% if (temp_diff >= 3.0) %}\n
        \   0\n  {% elif (temp_diff < 3.0) and (temp_diff > 0.0) %}\n    3\n  {% else
        %}\n    6\n  {% endif %}\n{% else %}\n  {# non-numeric number returned. set
        a longer delay to be safe #}\n  6\n{% endif %}\n"
      seconds: 0
      milliseconds: 0
  - service: switch.turn_on
    target:
      entity_id: switch.sw_hvac_garage_thermostat
    data: {}
  mode: restart
- id: '1631637344914'
  alias: 'Kids Bedroom: control lamp'
  description: control Ikea bulb in kids room from 5 button remote
  use_blueprint:
    path: fich/zigbee2mqtt-ikea-5-button-remote-general-use.yaml
    input:
      remote: sensor.rmt_kidsbedroom_remote_action
      button_on_off:
      - service: light.toggle
        target:
          entity_id: light.blb_kidsbedroom_lamp
      button_brightness_up_short:
      - service: light.turn_on
        data:
          transition: 1
          brightness_step_pct: 20
        target:
          entity_id: light.blb_kidsbedroom_lamp
      button_brightness_down_short:
      - service: light.turn_on
        data:
          transition: 1
          brightness_step_pct: -20
        target:
          entity_id: light.blb_kidsbedroom_lamp
      button_right_short:
      - service: light.turn_on
        data:
          hs_color:
          - '{{ range(360) | random }}'
          - '{{ range(80,101) | random }}'
          effect: Solid
          transition: 1
        entity_id: light.blb_kidsbedroom_lamp
      button_left_short:
      - service: light.turn_on
        data:
          transition: 1
          effect: Rainbow Runner
        target:
          entity_id: light.blb_kidsbedroom_lamp
      button_right_long:
      - service: light.turn_on
        target:
          entity_id: light.blb_kidsbedroom_lamp
        data:
          transition: 1
          kelvin: 3300
          effect: Solid
- id: '1631739108301'
  alias: 'Garage Indoor: Notify when vehicle door left open at night'
  description: notify chris' phone if the vehicle door is left open for 5 minutes
    when the time is after 22:30.
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: switch.sw_garage_vehicledoorcontact
      state: 'on'
      for: 00:05:00
    - condition: time
      after: '22:30:00'
  action:
  - service: notify.mobile_app_turraphone
    data:
      message: Garage Vehicle Door has been left open
      title: "‚ùó\U0001F6AA Garage Vehicle Door Open"
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  mode: single
- id: '1634070537275'
  alias: 'Crawlspace: Locker climate controls'
  description: ''
  trigger:
  - platform: time_pattern
    hours: /1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.plg_crawlspace_zbrtr
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.crawlspace_locker_mean_humidity_calculation
          below: '49.0'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.plg_crawlspace_zbrtr
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.plg_crawlspace_zbrtr
          state: 'off'
        - condition: numeric_state
          entity_id: sensor.crawlspace_locker_mean_humidity_calculation
          above: '52.0'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.plg_crawlspace_zbrtr
    default: []
  mode: single
- id: '1634077407692'
  alias: 'House: Announce if water leak detected'
  description: Announce on Sonos speakers if water leak is detected.
  trigger:
  - platform: state
    entity_id: binary_sensor.group_leak_sensors
    to: 'on'
  variables:
    triggered_leak_sensor: "{% for entity in trigger.to_state.attributes.entity_id
      %}\n  {% if is_state(entity, 'on') %}\n    {{ state_attr(entity, 'friendly_name')
      }}\n  {% endif %}\n{% endfor %}\n"
  condition: []
  action:
  - repeat:
      count: '3'
      sequence:
      - service: script.sonos_say
        data:
          sonos_entity:
          - media_player.family_room_speaker
          - media_player.main_bedroom_speaker
          volume: 0.8
          message: ALERT. Water detected at {{ triggered_leak_sensor }} sensor.
          delay: 00:00:07
  mode: single
- id: '1634327400385'
  alias: 'Porch: Lights Off at midnight'
  description: turn porch lights off at midnight.
  trigger:
  - platform: time
    at: '23:59:00'
  condition: []
  action:
  - service: light.turn_off
    data:
      transition: 2
    target:
      entity_id: light.group_porch_lights
  mode: single
- id: '1635620369445'
  alias: 'Crawlspace: Entrance light ON when door opened'
  description: turn on crawlspace entrance lights when door is opened.
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id: binary_sensor.snr_crawlspace_entrancedoorcontact_contact
  condition:
  - condition: state
    entity_id: switch.sw_crawlspace_entrancelight
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.sw_crawlspace_entrancelight
  mode: single
- id: '1638686806697'
  alias: 'Garage Inside: Lights on when vehicle doors opened after sunset'
  description: turn on garage lights when vehicle door is opened after sunset (returning
    home only).
  trigger:
  - platform: state
    entity_id: switch.sw_garage_vehicledoorcontact
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - condition: state
      entity_id: binary_sensor.snr_garage_housedoorcontact_contact
      state: 'off'
      for:
        hours: 0
        minutes: 10
        seconds: 0
    - condition: state
      entity_id: switch.sw_garage_ceilingmainlights
      state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.sw_garage_ceilingmainlights
  mode: single
- id: '1642795421437'
  alias: 'House: Nofity if any always on plug turned Off'
  description: send notification to everyone, including the TV, if an always on plug
    has been off for 1 minute
  trigger:
  - platform: state
    entity_id: switch.group_always_on_plugs
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_turraphone
    data:
      title: "‚ùó\U0001F50C Plug Power OFF"
      message: Power OFF detected at {{ triggered_plug }}.
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  - service: notify.grp_all_tvs
    data:
      message: ALERT! Power OFF at {{ triggered_plug }}.
  mode: single
  variables:
    triggered_plug: "{% for entity in trigger.to_state.attributes.entity_id %}\n  {#
      state could be: off, unavailable and none #}\n  {% if not is_state(entity, 'on')
      %}\n    {{ state_attr(entity, 'friendly_name') }}\n  {% endif %}\n{% endfor
      %}\n"
- id: '1642826717353'
  alias: 'Laundry: Washing Machine Off if water leak detected'
  description: turn off power to washing machine if water leak sensor is triggered
    in laundry room
  trigger:
  - platform: state
    entity_id: binary_sensor.snr_laundry_washingmachineleak_water_leak
    to: 'on'
  condition:
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.plg_laundry_washingmachine
  mode: single
- id: '1643213265225'
  alias: 'Crawlspace: Lab light toggle when Button is pressed'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.rmt_crawlspace_labremote_click
    to: single
  condition: []
  action:
  - service: light.toggle
    target:
      entity_id: light.blb_crawlspace_lab
    data:
      kelvin: 4500
      brightness: 255
  mode: single
- id: '1645334376398'
  alias: 'Kitchen: Dishwasher Off if water leak detected'
  description: turn off power to dishwasher if water leak sensor is triggered at dishwasher
    in kitchen.
  trigger:
  - platform: state
    entity_id: binary_sensor.snr_kitchen_dishwasherleak_water_leak
    to: 'on'
  condition:
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.sw_kitchen_dishwasher
  mode: single
- id: '1645572649812'
  alias: 'Shed: Ventilation controls'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.sw_shed_fan
          state: 'off'
        - condition: state
          entity_id: sun.sun
          state: above_horizon
          for:
            hours: 0
            minutes: 0
            seconds: 0
        - condition: template
          value_template: "{{\n  (states('sensor.snr_shed_climate_humidity')|int(default=50)
            > (states('sensor.snr_outside_humidity')|int(default=50)+10))\n}}"
        - condition: numeric_state
          entity_id: sensor.snr_outside_temperature
          above: '0'
        - condition: not
          conditions:
          - condition: template
            value_template: "{{\n  'rainy' in states('weather.pitt_meadows')\n}}"
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_shed_fan
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.sw_shed_fan
          state: 'on'
        - condition: or
          conditions:
          - condition: state
            entity_id: sun.sun
            state: below_horizon
          - condition: template
            value_template: "{{\n  'rainy' in states('weather.pitt_meadows')\n}}"
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.sw_shed_fan
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.sw_shed_fan
          state: 'off'
        - condition: template
          value_template: "{{\n  (states('sensor.shed_mean_temperature_calculation')|int(default=10)
            > (states('sensor.snr_outside_temperature')|int(default=10)+10)) and\n
            \ (states('sensor.shed_mean_temperature_calculation')|int(default=10)
            > 20)\n}}"
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_shed_fan
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: switch.sw_shed_fan
          state: 'off'
        - condition: state
          entity_id: binary_sensor.snr_shed_doorcontact_contact
          state: 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_shed_fan
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.sw_shed_fan
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.dry_garlic
          state: 'on'
        - condition: state
          entity_id: switch.sw_shed_fan
          state: 'off'
        - condition: template
          value_template: '{{ now().strftime("%M")|int(default=0) < 15 }}'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_shed_fan
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.sw_shed_fan
    default: []
  mode: single
- id: '1645836091671'
  alias: 'Porch: Lights ON with motion'
  description: turn on porch lights when motion is detected after sunset and return
    to desired state
  trigger:
  - platform: state
    entity_id: binary_sensor.snr_outside_frontporchmotion_occupancy
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: sun.sun
          state: below_horizon
        - condition: time
          after: '16:30:00'
          before: '23:59:00'
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id: scene.porch_bulbs_normal_colour_bright
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.snr_outside_frontporchmotion_occupancy
          from: 'on'
          to: 'off'
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - choose:
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.adhoc_outside_light_colours
              state: 'on'
            - condition: time
              before: '22:29:00'
              after: 00:00:00
          sequence:
          - service: scene.turn_on
            data:
              transition: 2
            target:
              entity_id: scene.porch_bulbs_adhoc_colours
        - conditions:
          - condition: and
            conditions:
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.christmas_string_lights_outlet
                state: 'on'
              - condition: state
                entity_id: input_boolean.halloween_string_lights_outlet
                state: 'on'
            - condition: time
              before: '22:29:00'
              after: 00:00:00
          sequence:
          - service: scene.turn_on
            data:
              transition: 2
            target:
              entity_id: scene.porch_bulbs_christmas_colours
        default:
        - service: scene.turn_on
          data:
            transition: 2
          target:
            entity_id: scene.porch_bulbs_normal_colour_dimmed
    - conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: sun.sun
          state: below_horizon
        - condition: time
          after: 00:00:00
          before: 06:00:00
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id: scene.porch_bulbs_normal_colour_bright
      - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.snr_outside_frontporchmotion_occupancy
          from: 'on'
          to: 'off'
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data:
          transition: 2
        target:
          entity_id: light.group_porch_lights
    default: []
  mode: single
- id: '1645861752199'
  alias: 'Outside: Front lights transition to security mode check'
  description: transition lights from colours to white for security lighting
  trigger:
  - platform: time
    at: '22:30:00'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.adhoc_outside_light_colours
      state: 'on'
    - condition: state
      entity_id: input_boolean.christmas_string_lights_outlet
      state: 'on'
    - condition: state
      entity_id: input_boolean.halloween_string_lights_outlet
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.adhoc_outside_light_colours
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id:
          - scene.driveway_bulbs_normal_colour
          - scene.porch_bulbs_normal_colour_dimmed
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.christmas_string_lights_outlet
          state: 'on'
        - condition: state
          entity_id: input_boolean.halloween_string_lights_outlet
          state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.sw_fronthouseoutlet
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id:
          - scene.driveway_bulbs_normal_colour
          - scene.porch_bulbs_normal_colour_dimmed
    default: []
  mode: single
- id: '1645862394431'
  alias: 'Outside: Front lights On at sunset'
  description: turn on driveway and porch lights shortly after sunset
  trigger:
  - platform: sun
    event: sunset
    offset: 00:15:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.adhoc_outside_light_colours
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id:
          - scene.driveway_bulbs_adhoc_colours
          - scene.porch_bulbs_adhoc_colours
    - conditions:
      - condition: state
        entity_id: input_boolean.christmas_string_lights_outlet
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id:
          - scene.driveway_bulbs_christmas_colours
          - scene.porch_bulbs_christmas_colours
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_fronthouseoutlet
    - conditions:
      - condition: state
        entity_id: input_boolean.halloween_string_lights_outlet
        state: 'on'
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id:
          - scene.driveway_bulbs_halloween_colours
          - scene.porch_bulbs_halloween_colours
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.sw_fronthouseoutlet
    default:
    - service: scene.turn_on
      data:
        transition: 2
      target:
        entity_id:
        - scene.driveway_bulbs_normal_colour
        - scene.porch_bulbs_normal_colour_dimmed
  mode: single
- id: '1646521999725'
  alias: 'Laundry: Dehumidifier controls'
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: numeric_state
          entity_id: sensor.snr_laundry_climate_humidity
          above: '65.0'
        - condition: state
          entity_id: binary_sensor.snr_laundry_windowcontact_contact
          state: 'off'
        - condition: state
          entity_id: switch.plg_laundry_zbrtr
          state: 'off'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.plg_laundry_zbrtr
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.snr_laundry_windowcontact_contact
          state: 'on'
          for:
            hours: 0
            minutes: 0
            seconds: 2
        - condition: and
          conditions:
          - condition: numeric_state
            entity_id: sensor.snr_laundry_climate_humidity
            below: '61.0'
          - condition: state
            entity_id: switch.plg_laundry_zbrtr
            state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.plg_laundry_zbrtr
    default: []
  mode: single
- id: '1656021519367'
  alias: 'Main Bedroom: Remote controls'
  description: control devices in main bedroom from 5 button remote
  use_blueprint:
    path: fich/zigbee2mqtt-ikea-5-button-remote-general-use.yaml
    input:
      remote: sensor.rmt_mainbedroom_remote_action
      button_on_off:
      - service: switch.toggle
        data: {}
        target:
          entity_id: switch.main_bedroom_entertainment
      button_brightness_up_long:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.sw_mainbedroom_ceilinglight
      button_brightness_down_long:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.sw_mainbedroom_ceilinglight
      button_left_short:
      - service: media_player.volume_down
        data: {}
        target:
          entity_id: media_player.main_bedroom_speaker
      button_right_short:
      - service: media_player.volume_up
        data: {}
        target:
          entity_id: media_player.main_bedroom_speaker
      button_brightness_down_short:
      - service: light.turn_on
        data:
          brightness_step_pct: -10
        target:
          entity_id: light.sw_mainbedroom_ceilinglight
      button_brightness_up_short:
      - service: light.turn_on
        data:
          brightness_step_pct: 10
        target:
          entity_id: light.sw_mainbedroom_ceilinglight
- id: '1664468912980'
  alias: Downstairs Bathroom Adjust Motion Light timer
  description: Picks up the input helper changes and applies them back to the TASMOTA
    switch via MQTT script
  trigger:
  - platform: state
    entity_id:
    - input_number.downstairs_bathroom_switch_blindtime
    id: blindtime-adjusted
  - platform: state
    entity_id:
    - input_number.downstairs_bathroom_switch_lighttime
    id: lighttime-adjusted
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: blindtime-adjusted
      sequence:
      - service: script.adjust_motion_light_timer_setting
        data:
          timer: blindtime
          topic: SW_DownstairsBathroom_CeilingLight
          duration: '{{ states(''input_number.downstairs_bathroom_switch_blindtime'')
            | int }}'
    - conditions:
      - condition: trigger
        id: lighttime-adjusted
      sequence:
      - service: script.adjust_motion_light_timer_setting
        data:
          timer: lighttime
          topic: SW_DownstairsBathroom_CeilingLight
          duration: '{{ states(''input_number.downstairs_bathroom_switch_lighttime'')
            | int * 60 }}'
    default: []
  mode: single
- id: '1665779633285'
  alias: 'Downstairs Bathroom: toggle Light Time out time'
  description: Extend light timeout when showering.
  trigger:
  - platform: state
    entity_id:
    - sensor.rmt_bathroomdown_remote_click
    to: single
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_number.downstairs_bathroom_switch_lighttime
        state: '2.0'
      sequence:
      - service: input_number.set_value
        data:
          value: 20
        target:
          entity_id: input_number.downstairs_bathroom_switch_lighttime
    - conditions:
      - condition: state
        entity_id: input_number.downstairs_bathroom_switch_lighttime
        state: '20.0'
      sequence:
      - service: input_number.set_value
        data:
          value: 2
        target:
          entity_id: input_number.downstairs_bathroom_switch_lighttime
  mode: single
