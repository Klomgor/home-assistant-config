## HOUSE

# sensor templates from ecobee devices
# state: used for alerts dashboard
# bool:  used to annotate climate graphs
- platform: template
  sensors:
    # -- ecobee --
    # cooling on/off
    hvac_cooling_state:
      friendly_name: 'HVAC Action Cooling state'
      value_template: >-
        {% if states.climate.amazon.attributes.hvac_action == 'cooling' %}
          on
        {% else %}
          off
        {% endif %}
    hvac_cooling_bool:
      friendly_name: 'HVAC Action Cooling boolean'
      value_template: >-
        {% if states.climate.amazon.attributes.hvac_action == 'cooling' %}
          1
        {% else %}
          0
        {% endif %}
    
    # heating on/off
    hvac_heating_state:
      friendly_name: 'HVAC Action Heating state'
      value_template: >-
        {% if states.climate.amazon.attributes.hvac_action == 'heating' %}
          on
        {% else %}
          off
        {% endif %}
    hvac_heating_bool:
      friendly_name: 'HVAC Action Heating boolean'
      value_template: >-
        {% if states.climate.amazon.attributes.hvac_action == 'heating' %}
          1
        {% else %}
          0
        {% endif %}

    # fan on/off
    hvac_fan_state:
      friendly_name: 'HVAC Fan state'
      value_template: >-
        {% if states.climate.amazon.attributes.fan == 'on' %}
          on
        {% else %}
          off
        {% endif %}
    hvac_fan_bool:
      friendly_name: 'HVAC Fan State boolean'
      value_template: >-
        {% if states.climate.amazon.attributes.fan == 'on' %}
          1
        {% else %}
          0
        {% endif %}

    # any hvac function is on/off
    hvac_state:
      friendly_name: 'HVAC State'
      value_template: >-
        {% if states.climate.amazon.attributes.fan         == 'on'      or 
              states.climate.amazon.attributes.hvac_action == 'heating' or
              states.climate.amazon.attributes.hvac_action == 'cooling'
        %}
          on
        {% else %}
          off
        {% endif %}

    # current_temperature from ecobee
    hvac_ecobee_indoor_avg_temperature:
      friendly_name: 'Indoor Average Temperature from Ecobee'
      unit_of_measurement: 'Â°C'
      device_class: temperature
      value_template: "{{ state_attr('climate.amazon', 'current_temperature') }}"

    # current humidity from ecobee
    hvac_ecobee_indoor_avg_humidity:
      friendly_name: 'Indoor Average Humidity from Ecobee'
      unit_of_measurement: '%'
      device_class: humidity
      value_template: "{{ state_attr('climate.amazon', 'current_humidity') | float(2) }}"

    # current mean humidity from min_max calculation
    indoor_mean_humidity:
      friendly_name: 'Indoor Mean Humidity'
      unit_of_measurement: '%'
      device_class: humidity
      value_template: "{{ states('sensor.indoor_mean_humidity_calculation') | int }}"


## cooling time on today
- platform: history_stats
  name: 'HVAC Cooling Time On Today'
  entity_id: sensor.hvac_cooling_state
  state: 'on'
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

## heating time on today
- platform: history_stats
  name: 'HVAC Heating Time On Today'
  entity_id: sensor.hvac_heating_state
  state: 'on'
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

## hvac time on today
- platform: history_stats
  name: 'HVAC Time On Today'
  entity_id: sensor.hvac_state
  state: 'on'
  type: time
  start: "{{ now().replace(hour=0, minute=0, second=0) }}"
  end: "{{ now() }}"

# mean indoor humidity from climate sensors
- platform: min_max
  name: 'Indoor Mean Humidity Calculation'
  type: mean
  round_digits: 0
  entity_ids:
    - sensor.snr_crawlspaceclimate_humidity
    - sensor.snr_officeclimate_humidity
    - sensor.hvac_ecobee_indoor_avg_humidity
    - sensor.snr_mainbedroomclimate_humidity
    - sensor.snr_kidsroomclimate_humidity
    - sensor.snr_sparebedroomclimate_humidity
