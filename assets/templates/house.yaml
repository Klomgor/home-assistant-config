## HOUSE

- binary_sensor:
    # -- ecobee --
    # HVAC fan on/off
    - name: 'HVAC Ecobee Fan State'
      unique_id: hvac_ecobee_fan_state
      # is_state() vs. states() to avoid unknown state at startup
      state: >
        {{ state_attr('climate.amazon', 'fan') }}

    # HVAC heating on/off
    - name: 'HVAC Ecobee Heating State'
      unique_id: hvac_ecobee_heating_state
      state: >
        {{ is_state_attr('climate.amazon', 'hvac_action', 'heating') }}

    # HVAC cooling on/off
    - name: 'HVAC Ecobee Cooling State'
      unique_id: hvac_ecobee_cooling_state
      state: >
        {{ is_state_attr('climate.amazon', 'hvac_action', 'cooling') }}


- sensor:
    # -- ecobee --
    # current_temperature from ecobee
    - name: 'HVAC Ecobee Indoor Average Temperature'
      unique_id: hvac_ecobee_indoor_avg_temperature
      device_class: temperature
      unit_of_measurement: 'Â°C'
      state: >
        {{ state_attr('climate.amazon', 'current_temperature') }}

    # humidity from ecobee
    - name: 'HVAC Ecobee Indoor Average Humidity'
      unique_id: hvac_ecobee_indoor_avg_humidity
      device_class: humidity
      unit_of_measurement: '%'
      state: >
        {{ state_attr('climate.amazon', 'current_humidity') | float(2) }}

    # current mean humidity from min_max calculation
    - name: 'Indoor Mean Humidity'
      unique_id: indoor_mean_humidity
      device_class: humidity
      unit_of_measurement: '%'
      state: >
        {{ states('sensor.indoor_mean_humidity_calculation') | int }}